name: Release a new version

on:
  # Trigger the release when a pull request to master is merged or closed without merge.
  pull_request:
    branches:
      - master
    types: [ opened, edited, reopened, synchronize ]

jobs:
  version:
    # Only trigger if the pull request was actually merged,
    # the pull request head branch starts with release/
    if: |
      github.event.pull_request.merged == true ||
      startsWith(github.event.pull_request.head.ref, 'release/')

    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.version-export.outputs.version }}

    steps:
      - id: version-calculator
        name: Calculate the current version
        run: echo "version=${{ github.event.pull_request.title }}" >> $GITHUB_ENV

      - name: Check version constraint validity
        uses: actions-ecosystem/action-regex-match@v2
        id: regex-match
        with:
          text: ${{ env.version }}
          regex: '^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$'

      - name: Abort if version incorrect
        id: abort-version
        if: ${{ steps.regex-match.outputs.match == '' }}
        run: exit 1

      - name: Export the version to be useable by other jobs
        id: version-export
        run: echo "::set-output name=version::${{ env.version }}"

  release:
    runs-on: ubuntu-latest
    needs: version
    steps:
      - name: Checkout the main branch
        id: checkout-main
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Update CHANGELOG with version
        id: update-changelog
        run: docker run -i --rm -v "$(pwd)":/usr/local/app -w /usr/local/app rcmachado/changelog release 2.0.4

      - id: sdd
        run: cat CHANGELOG.md

    # TODO All the following steps
    # Get the version number to use
    # Update the changelog
      # (https://github.com/thomaseizinger/keep-a-changelog-new-release)
      # Detect previous version from most recent release
    # Get the contents of the changelog for this version
    # Create a release using the contents of the changelog
      # To create release(https://github.com/actions/create-release)
      # To get releaes contents (https://github.com/marketplace/actions/changelog-reader)
    # Checkout develop
    # Merge in changes from master
    # Email (?) to say release successful
